<?xml version="1.0"?>
<unity>
  <typeAliases>
    <!-- Lifetime manager types -->
    <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
    <!-- define aliases for interfaces -->
    <typeAlias alias="IPageProvider" type="DD4T.ContentModel.Contracts.Providers.IPageProvider, DD4T.ContentModel.Contracts" />
    <typeAlias alias="IComponentProvider" type="DD4T.ContentModel.Contracts.Providers.IComponentProvider, DD4T.ContentModel.Contracts" />
    <typeAlias alias="IBinaryProvider" type="DD4T.ContentModel.Contracts.Providers.IBinaryProvider, DD4T.ContentModel.Contracts" />
    <typeAlias alias="IBinaryFactory" type="DD4T.ContentModel.Factories.IBinaryFactory, DD4T.ContentModel.Contracts" />
    <typeAlias alias="ILinkProvider" type="DD4T.ContentModel.Contracts.Providers.ILinkProvider, DD4T.ContentModel.Contracts" />
    <typeAlias alias="ITaxonomyProvider" type="DD4T.ContentModel.Contracts.Providers.ITaxonomyProvider, DD4T.ContentModel.Contracts" />
    <typeAlias alias="IPageFactory" type="DD4T.ContentModel.Factories.IPageFactory, DD4T.ContentModel.Contracts" />
    <typeAlias alias="IComponentFactory" type="DD4T.ContentModel.Factories.IComponentFactory, DD4T.ContentModel.Contracts" />
    <typeAlias alias="ILinkFactory" type="DD4T.ContentModel.Factories.ILinkFactory, DD4T.ContentModel.Contracts" />
    <!-- 
        Define aliases for implementations 
        This is where we determine which classes to use for our implementations!
      -->
    <typeAlias alias="PageProvider" type="DD4T.Providers.SDLTridion2013.TridionPageProvider, DD4T.Providers.SDLTridion2013" />
    <typeAlias alias="ComponentProvider" type="DD4T.Providers.SDLTridion2013.TridionComponentProvider, DD4T.Providers.SDLTridion2013" />
    <typeAlias alias="BinaryProvider" type="DD4T.Providers.SDLTridion2013.TridionBinaryProvider, DD4T.Providers.SDLTridion2013" />
    <typeAlias alias="BinaryFactory" type="DD4T.Factories.BinaryFactory, DD4T.Factories, Version=1.25.0.0, Culture=neutral, PublicKeyToken=null" />
    <typeAlias alias="LinkProvider" type="DD4T.Providers.SDLTridion2013.TridionLinkProvider, DD4T.Providers.SDLTridion2013" />
    <typeAlias alias="TaxonomyProvider" type="DD4T.Providers.SDLTridion2013.TridionTaxonomyProvider, DD4T.Providers.SDLTridion2013" />
    <typeAlias alias="PageFactory" type="DD4T.Factories.PageFactory, DD4T.Factories" />
    <typeAlias alias="ComponentFactory" type="DD4T.Factories.ComponentFactory, DD4T.Factories" />
    <typeAlias alias="BinaryFileManager" type="DD4T.Web.Mvc.Modules.BinaryFileManager, DD4T.Web.Mvc" />
  </typeAliases>
  <!-- Unity Configuration -->
  <containers>
    <container name="main">
      <types>
        <!-- map the implementations to the interfaces -->
        <type type="Sdl.Web.Common.Interfaces.IStaticFileManager, Sdl.Web.Common"
              mapTo="Sdl.Web.DD4T.BinaryFileManager, Sdl.Web.DD4T">
          <lifetime type="singleton" />
        </type>
        <type type="Sdl.Web.Common.Interfaces.IContentProvider, Sdl.Web.Common"
              mapTo="Sdl.Web.DD4T.DD4TContentProvider, Sdl.Web.DD4T">
          <lifetime type="singleton" />
        </type>
        <type type="Sdl.Web.Common.Interfaces.IModelBuilder, Sdl.Web.Common"
              mapTo="Sdl.Web.DD4T.Mapping.DD4TModelBuilder, Sdl.Web.DD4T">
          <lifetime type="singleton" />
        </type>
        <type type="Sdl.Web.Common.Interfaces.IRenderer, Sdl.Web.Common"
              mapTo="Sdl.Web.DD4T.DD4TRenderer, Sdl.Web.DD4T" />
        <type type="DD4T.ContentModel.Contracts.Resolvers.IPublicationResolver, DD4T.ContentModel.Contracts"
              mapTo="Sdl.Web.DD4T.PublicationResolver, Sdl.Web.DD4T" />
        <type type="DD4T.ContentModel.Factories.ILinkFactory, DD4T.ContentModel.Contracts"
              mapTo="Sdl.Web.DD4T.ExtensionlessLinkFactory, Sdl.Web.DD4T">
          <property name="PublicationResolver"
                    dependencyType="Sdl.Web.DD4T.PublicationResolver, Sdl.web.DD4T" />
        </type>
        <type type="IComponentFactory"
              mapTo="DD4T.Factories.ComponentFactory, DD4T.Factories">
          <lifetime type="singleton" />
          <property name="PublicationResolver"
                    dependencyType="Sdl.Web.DD4T.PublicationResolver, Sdl.web.DD4T" />
        </type>
        <type type="IPageFactory"
              mapTo="DD4T.Factories.PageFactory, DD4T.Factories">
          <lifetime type="singleton" />
          <property name="PublicationResolver"
                    dependencyType="Sdl.Web.DD4T.PublicationResolver, Sdl.web.DD4T" />
          <property name="ComponentFactory"
                    dependencyType="IComponentFactory" />
        </type>
      </types>
    </container>
  </containers>
</unity>